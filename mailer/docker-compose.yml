version: '3.5'

services:
  symfony-api-platform-mailer:
    container_name: symfony-api-platform-be
    build:
      context: docker/php
      args:
        UID: $U_ID
    environment:
      PHP_IDE_CONFIG: serverName=Docker
      PHP_XDEBUG_ENABLED: 1
      XDEBUG_CONFIG: remote_host=172.17.0.1 remote_port=9005 # Linux users
    #      XDEBUG_CONFIG: remote_host=host.docker.internal remote_port=9005 # MacOS users
    volumes:
      - ./:/appdata/www
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      #      - ./docker/php/xdebug-macos.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ~/.ssh/id_rsa:/home/appuser/.ssh/id_rsa
    depends_on:
      - symfony-api-platform-db
    networks:
      - symfony-api-platform-network

  symfony-api-platform-mailer-db:
    container_name: symfony-api-platform-mailer-db
    build:
      context: ./docker/database
    image: mysql:8.0
    ports:
      - 36100:3306
    environment:
      MYSQL_DATABASE: symfony_mailer_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root
    command: mysqld --sql_mode="STRICT_ALL_TABLES,NO_ENGINE_SUBSTITUTION"
    volumes:
      - symfony-api-platform-mailer-db-data:/var/lib/mysql
    networks:
      - symfony-api-platform-network

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: symfony-api-platform-phpmyadmin
    environment:
      PMA_HOST: symfony-api-platform-db # Nombre del servicio de MySQL/PostgreSQL en Docker Compose
      PMA_PORT: 3306 # Puerto de MySQL/PostgreSQL
    ports:
      - "8080:80"
    networks:
      - symfony-api-platform-network

volumes:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
  symfony-api-platform-mailer-db-data:

networks:
  symfony-api-platform-network:
    external: true